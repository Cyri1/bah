{"version":3,"file":"js/78.9319c6ca.js","mappings":";;;GAMA,MAAMA,EAAuB,cACvBC,EAA+B,cAC/BC,EAA6B,2BAQ7BC,EAAuB,GAAGF,MAAiCC,IAC3DE,EAAgBC,GAAOA,GAAMA,EAAGC,UAAYN,EAW5CO,EAAmBC,MAAOH,GAC1BD,EAAaC,UACT,IAAII,SAASC,IAAY,IAAAC,GAAiBN,EAAIK,KAC7CL,EAAGE,oBAELF,EAqBHO,EAAyBP,GACtBA,EAAGQ,QAAQV,GAMdW,EAAc,CAACT,EAAIU,KACvB,GAAIX,EAAaC,GAAK,CACpB,MAAMW,EAAUX,EAChB,OAAOW,EAAQF,YAAYC,GAE7B,OAAON,QAAQC,QAAQL,EAAGY,SAAS,CACjCC,IAAK,EACLC,KAAM,EACNC,SAAUL,EAAa,EAAI,SAAW,WAOpCM,EAAgB,CAAChB,EAAIiB,EAAGC,EAAGR,KAC/B,GAAIX,EAAaC,GAAK,CACpB,MAAMW,EAAUX,EAChB,OAAOW,EAAQK,cAAcC,EAAGC,EAAGR,GAErC,OAAON,QAAQC,QAAQL,EAAGmB,SAAS,CACjCN,IAAKK,EACLJ,KAAMG,EACNF,SAAUL,EAAa,EAAI,SAAW,Y;;;;AC7E1C,MAAMU,EAAiB,KACrB,MAAMC,EAAMC,OACZD,EAAIE,iBAAiB,aAAa,MAChC,SAAS,KACP,MAAMC,EAAQH,EAAII,WACZC,EAASL,EAAIM,YACb3B,EAAK4B,SAASC,iBAAiBL,EAAQ,EAAGE,EAAS,GACzD,IAAK1B,EACH,OAEF,MAAM8B,GAAY,OAAsB9B,GACpC8B,GACF,IAAI1B,SAASC,IAAY,IAAAC,GAAiBwB,EAAWzB,KAAU0B,MAAK,MAClE,SAAU5B,UAQR2B,EAAUE,MAAMC,YAAY,aAAc,gBACpC,IAAAC,GAAYJ,EAAW,KAC7BA,EAAUE,MAAMG,eAAe","sources":["webpack://bah/./node_modules/@ionic/core/components/index8.js","webpack://bah/./node_modules/@ionic/core/components/status-tap.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\nimport { b as printRequiredElementError } from './index7.js';\n\nconst ION_CONTENT_TAG_NAME = 'ION-CONTENT';\nconst ION_CONTENT_ELEMENT_SELECTOR = 'ion-content';\nconst ION_CONTENT_CLASS_SELECTOR = '.ion-content-scroll-host';\n/**\n * Selector used for implementations reliant on `<ion-content>` for scroll event changes.\n *\n * Developers should use the `.ion-content-scroll-host` selector to target the element emitting\n * scroll events. With virtual scroll implementations this will be the host element for\n * the scroll viewport.\n */\nconst ION_CONTENT_SELECTOR = `${ION_CONTENT_ELEMENT_SELECTOR}, ${ION_CONTENT_CLASS_SELECTOR}`;\nconst isIonContent = (el) => el && el.tagName === ION_CONTENT_TAG_NAME;\n/**\n * Waits for the element host fully initialize before\n * returning the inner scroll element.\n *\n * For `ion-content` the scroll target will be the result\n * of the `getScrollElement` function.\n *\n * For custom implementations it will be the element host\n * or a selector within the host, if supplied through `scrollTarget`.\n */\nconst getScrollElement = async (el) => {\n  if (isIonContent(el)) {\n    await new Promise((resolve) => componentOnReady(el, resolve));\n    return el.getScrollElement();\n  }\n  return el;\n};\n/**\n * Queries the element matching the selector for IonContent.\n * See ION_CONTENT_SELECTOR for the selector used.\n */\nconst findIonContent = (el) => {\n  /**\n   * First we try to query the custom scroll host selector in cases where\n   * the implementation is using an outer `ion-content` with an inner custom\n   * scroll container.\n   */\n  const customContentHost = el.querySelector(ION_CONTENT_CLASS_SELECTOR);\n  if (customContentHost) {\n    return customContentHost;\n  }\n  return el.querySelector(ION_CONTENT_SELECTOR);\n};\n/**\n * Queries the closest element matching the selector for IonContent.\n */\nconst findClosestIonContent = (el) => {\n  return el.closest(ION_CONTENT_SELECTOR);\n};\n/**\n * Scrolls to the top of the element. If an `ion-content` is found, it will scroll\n * using the public API `scrollToTop` with a duration.\n */\nconst scrollToTop = (el, durationMs) => {\n  if (isIonContent(el)) {\n    const content = el;\n    return content.scrollToTop(durationMs);\n  }\n  return Promise.resolve(el.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: durationMs > 0 ? 'smooth' : 'auto',\n  }));\n};\n/**\n * Scrolls by a specified X/Y distance in the component. If an `ion-content` is found, it will scroll\n * using the public API `scrollByPoint` with a duration.\n */\nconst scrollByPoint = (el, x, y, durationMs) => {\n  if (isIonContent(el)) {\n    const content = el;\n    return content.scrollByPoint(x, y, durationMs);\n  }\n  return Promise.resolve(el.scrollBy({\n    top: y,\n    left: x,\n    behavior: durationMs > 0 ? 'smooth' : 'auto',\n  }));\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within either the `ion-content` selector or the `.ion-content-scroll-host` class.\n */\nconst printIonContentErrorMsg = (el) => {\n  return printRequiredElementError(el, ION_CONTENT_ELEMENT_SELECTOR);\n};\n\nexport { findClosestIonContent as a, scrollByPoint as b, findIonContent as f, getScrollElement as g, isIonContent as i, printIonContentErrorMsg as p, scrollToTop as s };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, s as scrollToTop } from './index8.js';\nimport { c as componentOnReady } from './helpers.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"],"names":["ION_CONTENT_TAG_NAME","ION_CONTENT_ELEMENT_SELECTOR","ION_CONTENT_CLASS_SELECTOR","ION_CONTENT_SELECTOR","isIonContent","el","tagName","getScrollElement","async","Promise","resolve","c","findClosestIonContent","closest","scrollToTop","durationMs","content","scrollTo","top","left","behavior","scrollByPoint","x","y","scrollBy","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","document","elementFromPoint","contentEl","then","style","setProperty","s","removeProperty"],"sourceRoot":""}