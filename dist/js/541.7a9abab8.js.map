{"version":3,"file":"js/541.7a9abab8.js","mappings":"uKACO,MAAMA,UAAuB,KAChCC,cACIC,SAASC,WACTC,KAAKC,MAAQ,kBACjB,CACAC,iBAAgB,MAAED,IACO,kBAAVA,IACPD,KAAKC,MAAQA,EAErB,CACAC,UAAUC,GACN,MAAMC,EAAQJ,KAAKK,KAAKC,QAAQN,KAAKO,YAAYJ,EAAQK,MACzD,MAAO,CAAEJ,QACb,CACAF,UAAUC,GACNH,KAAKK,KAAKI,QAAQT,KAAKO,YAAYJ,EAAQK,KAAML,EAAQC,MAC7D,CACAF,aAAaC,GACTH,KAAKK,KAAKK,WAAWV,KAAKO,YAAYJ,EAAQK,KAClD,CACAN,aACI,MAAMS,EAAOX,KAAKY,UAAUC,KAAIC,GAAKA,EAAEC,UAAUf,KAAKgB,OAAOC,UAC7D,MAAO,CAAEN,OACb,CACAT,cACI,IAAK,MAAMM,KAAOR,KAAKY,UACnBZ,KAAKK,KAAKK,WAAWF,EAE7B,CACAN,gBACI,IAAIgB,EACJ,MAAMC,EAAW,GACXC,EAAW,GACXC,EAAY,QACZV,EAAOW,OAAOX,KAAKX,KAAKK,MAAMkB,QAAOT,GAA8B,IAAzBA,EAAEU,QAAQH,KAC1D,IAAK,MAAMI,KAAUd,EAAM,CACvB,MAAMH,EAAMiB,EAAOV,UAAUM,EAAUJ,QACjCb,EAA6C,QAApCc,EAAKlB,KAAKK,KAAKC,QAAQmB,UAA4B,IAAPP,EAAgBA,EAAK,IACxEd,MAAOsB,SAAuB1B,KAAK2B,IAAI,CAAEnB,QACrB,kBAAjBkB,EACPN,EAASQ,KAAKpB,UAGRR,KAAK6B,IAAI,CAAErB,MAAKJ,UACtBe,EAASS,KAAKpB,GAEtB,CACA,MAAO,CAAEW,WAAUC,WACvB,CACAlB,kBACI,MAAMmB,EAAY,QACZV,EAAOW,OAAOX,KAAKX,KAAKK,MAAMkB,QAAOT,GAA8B,IAAzBA,EAAEU,QAAQH,KAC1D,IAAK,MAAMI,KAAUd,EACjBX,KAAKK,KAAKK,WAAWe,EAE7B,CACIpB,WACA,OAAOyB,OAAOC,YAClB,CACIf,aACA,MAAsB,kBAAfhB,KAAKC,MAA4B,GAAK,GAAGD,KAAKC,QACzD,CACAW,UACI,OAAOU,OAAOX,KAAKX,KAAKK,MAAMkB,QAAOT,GAAgC,IAA3BA,EAAEU,QAAQxB,KAAKgB,SAC7D,CACAT,YAAYC,GACR,OAAOR,KAAKgB,OAASR,CACzB,E","sources":["webpack://bah/./node_modules/@capacitor/preferences/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class PreferencesWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["PreferencesWeb","constructor","super","arguments","this","group","async","options","value","impl","getItem","applyPrefix","key","setItem","removeItem","keys","rawKeys","map","k","substring","prefix","length","_a","migrated","existing","oldprefix","Object","filter","indexOf","oldkey","currentValue","get","push","set","window","localStorage"],"sourceRoot":""}